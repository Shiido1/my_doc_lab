import 'package:stacked/stacked_annotations.dart';
import 'package:stacked_services/stacked_services.dart';
import '../../../ui/onboarding/first_onboarding_screen.dart';
import '../../../ui/screens/authentication/login_screen.dart';
import '../../../ui/screens/dashboard/appointment/prescription_detail_screen.dart';
import '../../../ui/screens/dashboard/chat/chat_screen.dart';
import '../../../ui/screens/dashboard/chat/doc_chat_screen.dart';
import '../../../ui/screens/dashboard/chat/pharm_chat_screen.dart';
import '../../../ui/screens/dashboard/chat/video_chat_agora/doctor_video_chat_screen.dart';
import '../../../ui/screens/dashboard/chat/video_chat_agora/video_chat_screen.dart';
import '../../../ui/screens/dashboard/dashboard_screen.dart';
import '../../../ui/screens/dashboard/doctor_dashboard_screen.dart';
import '../../../ui/screens/dashboard/lab_dashboard_screen.dart';
import '../../../ui/screens/dashboard/patient/doctor_patient_detail_sceen.dart';
import '../../../ui/screens/dashboard/patient/patient_detail_sceen.dart';
import '../../../ui/screens/dashboard/pharmacy_dashboard_screen.dart';
import '../../../ui/screens/dashboard/settings/profile_screen.dart';
import '../../../ui/screens/dashboard/settings/user_prescription/user_prescription_detail_screen.dart';
import '../../api_folder/auth_api.dart';
import '../../api_folder/doc_api.dart';
import '../../api_folder/med_lab_api.dart';
import '../../api_folder/pharm_api.dart';
import '../../connect_end/contract/contract_impl.dart';
import '../../connect_end/contract/doc_contract_impl.dart';
import '../../connect_end/contract/med_contract_impl.dart';
import '../../connect_end/contract/pharm_contract_impl.dart';
import '../../connect_end/repo/doc_repo_impl.dart';
import '../../connect_end/repo/med_repo_impl.dart';
import '../../connect_end/repo/pharm_repo_impl.dart';
import '../../connect_end/repo/repo_impl.dart';
import '../../connect_end/view_model/auth_view_model.dart';
import '../../connect_end/view_model/doc_view_model.dart';
import '../../connect_end/view_model/med_lab_view_model.dart';
import '../../connect_end/view_model/pharm_view_model.dart';
import '../manager/shared_preference.dart';
import '../network/cloudinary_network_service.dart';
import '../network/network_service.dart';

@StackedApp(
  routes: [
    MaterialRoute(page: FirstOnboardingScreen, initial: true),
    MaterialRoute(page: Dashboard),
    MaterialRoute(page: DocDashboard),
    MaterialRoute(page: LaboratoryDashboard),
    MaterialRoute(page: PharmacyDashboard),
    MaterialRoute(page: LoginScreen),
    MaterialRoute(page: ProfileScreen),
    MaterialRoute(page: DoctorChatScreen),
    MaterialRoute(page: ChatScreen),
    MaterialRoute(page: DoctorVideoChatScreen),
    MaterialRoute(page: VideoChatScreen),
    MaterialRoute(page: DoctorAppointmentDetailSceen),
    MaterialRoute(page: PatientDetailSceen),
    MaterialRoute(page: PharmChatScreen),
    MaterialRoute(page: PrescriptionDetailScreen),
    MaterialRoute(page: UserPrescriptionDetailScreen),
  ],
  dependencies: [
    LazySingleton(classType: NavigationService),
    LazySingleton(classType: DialogService),
    LazySingleton(classType: SnackbarService),
    LazySingleton(classType: SharedPreferencesService),
    LazySingleton(classType: NetworkService),
    LazySingleton(classType: CloudinaryNetworkService),
    LazySingleton(classType: AuthApi),
    LazySingleton(classType: DocAuthApi),
    LazySingleton(classType: PharmAuthApi),
    LazySingleton(classType: LabTechAuthApi),
    LazySingleton(classType: AuthContractsImpl),
    LazySingleton(classType: DocContractsImpl),
    LazySingleton(classType: PharmContractImpl),
    LazySingleton(classType: LabTechContractsImpl),
    LazySingleton(classType: AuthRepoImpl),
    LazySingleton(classType: DocRepoImpl),
    LazySingleton(classType: PharmRepoImpl),
    LazySingleton(classType: LabTechRepoImpl),
    LazySingleton(classType: AuthViewModel),
    LazySingleton(classType: DocViewModel),
    LazySingleton(classType: PharmViewModel),
    LazySingleton(classType: LabTechViewModel),
  ],
  logger: StackedLogger(),
)
class App {}
